(define (expmod base exp m)
  (cond ((= exp 0) 1)
        ((even? exp)
         (remainder (sqr (expmod base (/ exp 2) m))
                    m))
        (else
          (remainder (* base (expmod base (- exp 1) m))
                     m))))

(define (fool-fermat-test? n)
  (define (try-it a)
    (cond ((= a n) #t)
          ((= (expmod a n n) a) (try-it (+ a 1)))
          (else #f)))
  (try-it 2))

(fool-fermat-test? 561)
(fool-fermat-test? 1105)
(fool-fermat-test? 1729)
(fool-fermat-test? 2465)
(fool-fermat-test? 2821)
(fool-fermat-test? 6601)
(fool-fermat-test? 8911)
(fool-fermat-test? 10585)
(fool-fermat-test? 15841)
(fool-fermat-test? 29341)
(fool-fermat-test? 41041)
(fool-fermat-test? 46657)
(fool-fermat-test? 52633)
(fool-fermat-test? 62745)
(fool-fermat-test? 63973)
(fool-fermat-test? 75361)
(fool-fermat-test? 101101)
(fool-fermat-test? 115921)
(fool-fermat-test? 126217)
