(define (expmod base exp m)
  (define (test e a)
    (if (and (< e exp) (= a 1))
        0
        a))
  (define (expmod-sub base exp)
    (cond ((= exp 0) 1)
          ((even? exp)
           (test exp (remainder (sqr (expmod base (/ exp 2) m))
                                m)))
          (else
            (remainder (* base (expmod base (- exp 1) m))
                       m))))
  (expmod-sub base exp))

(define (miller-rabin n)
  (define (try-it a)
    (= (expmod a (- n 1) n) 1))
  (try-it (+ (exact-round (* (random) (- n 4))) 2)))

(define (fast-prime? n)
  (define (fast-prime?-sub times)
    (cond ((= times 0) true)
          ((miller-rabin n) (fast-prime?-sub (- times 1)))
          (else false)))
  (cond ((< n 2) #f)
        ((or (= n 2) (= n 3)) #t)
        (else (fast-prime?-sub 100))))

; Prime nubmers
(fast-prime? 2)
(fast-prime? 3)
(fast-prime? 5)
(fast-prime? 11)
(fast-prime? 1019)
(fast-prime? 11813)
(fast-prime? 102523)
(fast-prime? 32452841)
(fast-prime? 467567053)
(newline)

; Carmichael numbers
(fast-prime? 561)
(fast-prime? 1105)
(fast-prime? 1729)
(fast-prime? 2465)
(fast-prime? 2821)
(fast-prime? 6601)
(fast-prime? 8911)
(fast-prime? 10585)
(fast-prime? 15841)
(fast-prime? 29341)
(fast-prime? 41041)
(fast-prime? 46657)
(fast-prime? 52633)
(fast-prime? 62745)
(fast-prime? 63973)
(fast-prime? 75361)
(fast-prime? 101101)
(fast-prime? 115921)
(fast-prime? 126217)
(newline)

; Composite numbers
(fast-prime? 4)
(fast-prime? 119)
(fast-prime? 15485919)
(fast-prime? 467566979)
